// Package contextkeys содержит уникальные ключи для хранения и извлечения данных из context.Context.
// Используем отдельные типы ключей, чтобы избежать конфликтов и пересечений с другими данными в контексте.
//
// Мы используем struct{} потому что:
// - Пустая структура занимает 0 байт в памяти.
// - Она уникальна для данного пакета, даже если структура пустая.
// - При использовании одного экземпляра структуры (переменной UserID) мы гарантируем,
//   что никто случайно не сможет перезаписать или достать "не тот" контекст.
//
// Почему мы создаём переменную UserID?
// - Хотя login{} == login{} (пустые структуры сравнимы и равны),
//   принято использовать одну заранее созданную переменную,
//   чтобы избежать неочевидных ошибок при изменении структуры в будущем.

package contextkeys

// login — это уникальный тип ключа для хранения логина пользователя в контексте.
// Определяем новый тип struct{}, чтобы избежать конфликтов с другими ключами.
type login struct{}

// Login — единственный экземпляр ключа login, который нужно использовать для сохранения
// и получения значения логина пользователя из context.Context.
var Login = login{}
